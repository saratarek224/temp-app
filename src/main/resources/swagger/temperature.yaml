openapi: 3.0.3

info:
  version: '1.0'
  title: 'Temperature'
  description: 'Temperature operations'


paths:
  /temperature:
    post:
      summary: Create temperature
      operationId: createTemperature
      requestBody:
        content:
          application/json:
            schema:
                type: string
      responses:
        '201':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/BadToken'
    get:
      summary: List temperature items
      operationId: getTemperature
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemperatureListDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/BadToken'

  /temperature/{id}:
    get:
      summary: get temperature item
      operationId: getTemperatureItem
      parameters:
        - $ref: '#/components/parameters/temperatureId'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemperatureItemDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/BadToken'

components:

  schemas:
    TemperatureDTO:
      type: object
      allOf:
        - properties:
            id:
              type: integer
              format: int64
            device:
              type: integer
              format: int64
            temp:
              type: integer
              format: int64

    TemperatureListDTO:
      type: array
      items:
        $ref: '#/components/schemas/TemperatureDTO'


    TemperatureItems:
      type: object
      allOf:
        - properties:
            temp:
              type: integer
              format: int64
            createdDate:
              type: string
              format: date-time

    TemperatureItemDTO:
      type: object
      allOf:
        - properties:
            device:
              type: integer
              format: int64
            temp:
              type: array
              items:
                $ref: '#/components/schemas/TemperatureItems'



    SuccessResponse:
      type: object
      properties:
        message:
          type: string
        details:
          type: string

    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'

    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string


  parameters:

    temperatureId:
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: int64

  responses:

    Success:
      description: Success Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessResponse'

    GeneralError:
      description: General Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: Entity not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    BadToken:
      description: Invalid Token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
